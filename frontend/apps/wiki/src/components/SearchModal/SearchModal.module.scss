@use "@omnieconomy/shared-styles/themes" as *;

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: token(overlay);
  backdrop-filter: blur(8px);
  z-index: 9999;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  padding: 15vh token(space-4) token(space-4);
  animation: fadeIn 0.15s ease;

  @media (max-width: 640px) {
    padding: token(space-4);
    align-items: center;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.modal {
  width: 100%;
  max-width: 640px;
  background: token(surface);
  border: 1px solid token(border);
  border-radius: token(radius-lg);
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);
  animation: slideDown 0.2s ease;
  display: flex;
  flex-direction: column;
  max-height: calc(100vh - 30vh);
  overflow: hidden;

  @media (max-width: 640px) {
    max-height: 80vh;
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-20px) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.searchBar {
  display: flex;
  align-items: center;
  gap: token(space-3);
  padding: token(space-4) token(space-5);
  border-bottom: 1px solid token(border);
}

.searchIcon {
  color: token(text-muted);
  flex-shrink: 0;
}

.input {
  flex: 1;
  background: transparent;
  border: none;
  outline: none;
  font-size: 1.125rem;
  color: token(text);
  font-family: inherit;

  &::placeholder {
    color: token(text-muted);
  }
}

.searchingIndicator {
  display: flex;
  align-items: center;
  margin-right: token(space-2);
}

.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid token(border);
  border-top-color: token(primary);
  border-radius: 50%;
  animation: spin 0.6s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.closeBtn {
  flex-shrink: 0;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: 1px solid token(border);
  border-radius: token(radius-sm);
  color: token(text-muted);
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    background: token(surface-2);
    border-color: token(border-strong);
    color: token(text);
  }

  &:active {
    transform: scale(0.95);
  }
}

.results {
  overflow-y: auto;
  max-height: 400px;
  padding: token(space-2);

  @media (max-width: 640px) {
    max-height: 300px;
  }
}

.resultSection {
  padding: token(space-2) 0;

  &:not(:last-child) {
    border-bottom: 1px solid token(border);
    margin-bottom: token(space-2);
  }
}

.sectionTitle {
  display: flex;
  align-items: center;
  gap: token(space-2);
  padding: token(space-2) token(space-3);
  font-size: 0.75rem;
  font-weight: 600;
  color: token(text-muted);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.loadingText {
  color: token(primary);
  font-weight: 500;
  animation: pulse 1.5s ease-in-out infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.resultItem {
  width: 100%;
  display: flex;
  align-items: flex-start;
  gap: token(space-3);
  padding: token(space-3) token(space-3);
  background: transparent;
  border: none;
  border-radius: token(radius);
  cursor: pointer;
  transition: all 0.15s;
  text-align: left;
  font-family: inherit;

  &:hover,
  &.selected {
    background: token(surface-2);

    .enterIcon {
      opacity: 1;
    }
  }

  &:active {
    transform: scale(0.98);
  }
}

.resultIcon {
  flex-shrink: 0;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: token(bg);
  border: 1px solid token(border);
  border-radius: token(radius-sm);
  margin-top: token(space-1);
}

.recentIcon {
  flex-shrink: 0;
  color: token(text-muted);
  margin: 0 token(space-2);
  margin-top: token(space-1);
}

.resultContent {
  flex: 1;
  min-width: 0;
  display: flex;
  flex-direction: column;
  gap: token(space-1);
}

.resultTitle {
  font-size: 0.9375rem;
  font-weight: 500;
  color: token(text-strong);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.resultMeta {
  display: flex;
  align-items: center;
  gap: token(space-2);
  font-size: 0.8125rem;
  flex-wrap: wrap;
}

.categoryBadge {
  display: inline-flex;
  padding: 2px token(space-2);
  background: token(bg);
  border: 1px solid token(border);
  border-radius: 4px;
  color: token(text-muted);
  font-size: 0.75rem;
  font-weight: 500;
  flex-shrink: 0;
}

.matchTypeBadge {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  padding: 2px token(space-2);
  background: rgba(var(--primary-rgb, 147, 197, 114), 0.1);
  border: 1px solid rgba(var(--primary-rgb, 147, 197, 114), 0.2);
  border-radius: 4px;
  color: token(primary);
  font-size: 0.75rem;
  font-weight: 500;
  flex-shrink: 0;

  svg {
    opacity: 0.7;
  }
}

.resultExcerpt {
  font-size: 0.8125rem;
  color: token(text-muted);
  line-height: 1.4;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -webkit-box-orient: vertical;
  margin-top: token(space-1);
}

.enterIcon {
  flex-shrink: 0;
  color: token(text-muted);
  opacity: 0;
  transition: opacity 0.15s;
  margin-top: token(space-2);
}

.recentItem {
  .resultTitle {
    color: token(text-muted);
  }
}

.noResults {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: token(space-12) token(space-4);
  text-align: center;
  color: token(text-muted);

  svg {
    margin-bottom: token(space-4);
    opacity: 0.3;
  }

  p {
    font-size: 1rem;
    font-weight: 500;
    color: token(text);
    margin: 0 0 token(space-2) 0;
  }

  span {
    font-size: 0.875rem;
    color: token(text-muted);
  }
}

.footer {
  display: flex;
  align-items: center;
  gap: token(space-6);
  padding: token(space-3) token(space-5);
  border-top: 1px solid token(border);
  background: token(bg);
  font-size: 0.8125rem;
  color: token(text-muted);

  @media (max-width: 640px) {
    gap: token(space-4);
  }
}

.footerHint {
  display: flex;
  align-items: center;
  gap: token(space-2);

  kbd {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 20px;
    height: 20px;
    padding: 0 token(space-1);
    background: token(surface);
    border: 1px solid token(border);
    border-radius: 4px;
    font-size: 0.75rem;
    font-family: inherit;
    font-weight: 600;
    color: token(text);
    box-shadow: 0 1px 0 token(border);
  }

  span {
    font-size: 0.75rem;
  }
}
